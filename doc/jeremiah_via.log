* Week 01

  Met up with team for a few hours and brainstormed ideas. Settled on
  an exciting one and we also picked an exciting team name. Met with
  Kat and discussed the overview of the course.

  Setup the repository and created a maven project for our team. Setup
  maven with all of our project related information. Probably some
  more to add but not required.

* Week 02

  Had our weekly team meeting on Tuesday. Decided that we would meet
  up three times a week for pair programming. This way we all feel
  comfortable with all the code. 

  I spent some time this week coding a Sprite class and a
  SpriteFactory class. They both have unit tests to ensure that they
  work as intended. It will be good to move these two classes to their
  own package eventually that way we can enforce the fact that sprites
  must be created through the factory class.

  Met up again on Thursday and had a productive meeting. Discussed
  more of nitty-gritty details of our project. We also spent time
  locating resources to aid us in building our project.

  On Sunday, I created a prototype to help myself understand some of
  the game mechanics. It is a quick, dirty hack but will make it
  easier to reason about the architecture of the system we need.
  
* Week 03

  On Tuesday we had a meeting and decided the code we would be making
  for the week.  We decided to make the Matter and Vector classes in
  our pair programming sessions. We also discussed the possibly of
  encoding levels into YAML files so that we could easily design a
  multitude of levels. 

  After our meeting, I had my first pair programming sessions with
  Joss. We create the Matter class. It was quite straightforward but
  one method yet remains unimplemented. We were able to extensively
  document our code and even write unit tests to assert our intent as
  to how our code should work.

  Later in the evening I cam home and slightly modified our Matter
  object to make it more convenient to use. After the modifications it
  was possible to pass our Matter object immediately to Graphics
  methods which makes the code look cleaner.

  On Thursday morning, I had my pair programming sessions with
  Charlie. We created a VelocityVector class which maintains
  information about an object's velocity and contains methods to
  conveniently work with that data, e.g., calculate momentum,
  magnitude and angle.

  In the afternoon, I met up with Yukun for a while to do our pair
  programming sessions. Unfortunately I felt very about half-way
  through and had to go home. We will have to make up for it next
  time! 

* Week 04

  The team had our weekly meeting on Tuesday. We decided on what tasks
  we will be doing and now have a list of tasks to do. It was decided
  that I would do networking and I have been reading up on video game
  networking and planning on a good design. I think for our game
  purposes it will be fine to send objects as there is not too much in
  the game. But if it is, in fact, too slow then I will alter to send
  only numbers.

  Joss and I had our weekly pair programming sessions. We tried to
  figure out how to solve the problem of making the ejection angle
  just right for expelled matter. By the end of the sessions we had
  worked out the general idea of how it would be done.

  On Thursday, Charlie and I met up and began working on the AI
  player. We made a little bit of progress but we will need to change
  a few things architecturally in order for it to work right. Later
  that day I met with Yukun and we spent our pair programming sessions
  deciding how it would be possible to scroll around the map. This
  seems like a hard problem and one which we do not yet have an answer
  for.

* Week 05
* Week 06
* Week 07
* Week 08
* Week 09
* Week 10
* Week 11
