* Week 01

  Met up with team for a few hours and brainstormed ideas. Settled on
  an exciting one and we also picked an exciting team name. Met with
  Kat and discussed the overview of the course.

  Setup the repository and created a maven project for our team. Setup
  maven with all of our project related information. Probably some
  more to add but not required.

* Week 02

  Had our weekly team meeting on Tuesday. Decided that we would meet
  up three times a week for pair programming. This way we all feel
  comfortable with all the code. 

  I spent some time this week coding a Sprite class and a
  SpriteFactory class. They both have unit tests to ensure that they
  work as intended. It will be good to move these two classes to their
  own package eventually that way we can enforce the fact that sprites
  must be created through the factory class.

  Met up again on Thursday and had a productive meeting. Discussed
  more of nitty-gritty details of our project. We also spent time
  locating resources to aid us in building our project.

  On Sunday, I created a prototype to help myself understand some of
  the game mechanics. It is a quick, dirty hack but will make it
  easier to reason about the architecture of the system we need.
  
* Week 03

  On Tuesday we had a meeting and decided the code we would be making
  for the week.  We decided to make the Matter and Vector classes in
  our pair programming sessions. We also discussed the possibly of
  encoding levels into YAML files so that we could easily design a
  multitude of levels. 

  After our meeting, I had my first pair programming sessions with
  Joss. We create the Matter class. It was quite straightforward but
  one method yet remains unimplemented. We were able to extensively
  document our code and even write unit tests to assert our intent as
  to how our code should work.

  Later in the evening I cam home and slightly modified our Matter
  object to make it more convenient to use. After the modifications it
  was possible to pass our Matter object immediately to Graphics
  methods which makes the code look cleaner.

  On Thursday morning, I had my pair programming sessions with
  Charlie. We created a VelocityVector class which maintains
  information about an object's velocity and contains methods to
  conveniently work with that data, e.g., calculate momentum,
  magnitude and angle.

  In the afternoon, I met up with Yukun for a while to do our pair
  programming sessions. Unfortunately I felt very about half-way
  through and had to go home. We will have to make up for it next
  time! 

* Week 04

  The team had our weekly meeting on Tuesday. We decided on what tasks
  we will be doing and now have a list of tasks to do. It was decided
  that I would do networking and I have been reading up on video game
  networking and planning on a good design. I think for our game
  purposes it will be fine to send objects as there is not too much in
  the game. But if it is, in fact, too slow then I will alter to send
  only numbers.

  Joss and I had our weekly pair programming sessions. We tried to
  figure out how to solve the problem of making the ejection angle
  just right for expelled matter. By the end of the sessions we had
  worked out the general idea of how it would be done.

  On Thursday, Charlie and I met up and began working on the AI
  player. We made a little bit of progress but we will need to change
  a few things architecturally in order for it to work right. Later
  that day I met with Yukun and we spent our pair programming sessions
  deciding how it would be possible to scroll around the map. This
  seems like a hard problem and one which we do not yet have an answer
  for.

* Week 05
  
  Met up with the team for our weekly hour-long meeting to discuss the
  project. After the meeting, Joss and I coded for an hour. We mostly
  worked on unit tests and getting the music working. On Wednesday,
  the whole group met up and coded for a few hours. During this time,
  I coded many unit tests to demonstrated the intent of our program.

* Week 06

  We had our weekly team meeting. It was quite short since we were all
  busy and had the game goals from the previous week.

  I spent about 4 hours playing around and trying to understand
  networking code. Other than that, this was a pretty unproductive
  week for me. My SSC assignment ended up eating all my time and I
  wasn't prepared for that.
  
* Week 07

  We had our weekly team meeting on Tuesday. We talked about the
  stalled progress of our game and what we were going to do to solve
  it. We decided on some new features to add which would help propel
  the game forward. 

  I spent a few hours on Tuesday trying to implement the networking
  for the game. It was mostly research and trying to understand the
  problem. I created some classes but had no success is getting the
  code to work.

  On Wednesday I took about 5 hours to create a level loader. Levels
  can be defined in external `lvl' files which are editable in a text
  editor. The game can then load these files, assign a blob to each
  player and load the state of the world.

  Spent another hour or so on Wednesday making the blobs change color
  depending on their size. Essentially, smaller blobs would be blue
  and larger blobs would be orange. This made it easier to tell when a
  player was larger or smaller than the other blobs.

  On Thursday I spent about 2 hours making a puzzle level and refining
  the level loader. Defining levels in a text editor in slow going so
  I may make a GUI level editor or procedurally generated levels if
  there is time. But this is not a priority.

  I also spent a few hours on Thursday in an attempt to make a form of
  absorbing inelastic collisions. I was able to get inelastic
  collisions working but it completely broke the absorption
  process. Unfortunately, I had to revert all this code. I look
  forward to trying it again because it is a critical feature of the
  game.

  On Sunday I finally got the networking to send data over the
  wire. This took about 6 hours from start to finish. I am currently
  trying to integrate it into the main game but there are some
  problems. I will have to sort those out. I believe it has something
  to do with my `elegant' approach to handling the game state. My
  intent was to use set union to deal with all duplicates created by
  the clients and the server. Unfortunately, updating an object on the
  client and sending it back up causes it to be ignored because the
  older object is already in the list. What this means when you play
  is that none of the blobs move because they can't replace their old
  object self with their update self. 
  
* Week 08

  Made an attempt at integrating the networking into the main game
  code on Monday. I spent about three hours trying to make it work. I
  ran ino problems because updte objects won't displace older version
  of the same object on the server. Because of that I spent some time
  brainstorming a new approach. Instead I will use a pure client
  server model where the sever does allthe computation and the clients
  simply peek in on the state pf the world.

  On Tuesday we had our weekly team meeting. As we approach the end of
  the project there are fewer tasks to do. Now we need to concentrate
  on writing and adding the finishing touches. I spent an hour and a
  half changing the game architecture to a client-server model. Some
  kinks need to be worked out but it should be done today.
  
* Week 09
* Week 10
* Week 11
